{
  "version": 3,
  "sources": ["../script.js"],
  "sourcesContent": ["let apps = [];\n\nexport function setApps(newApps) {\n    apps = newApps;\n}\n\nexport function getApps() {\n    return apps;\n}\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const appSections = document.getElementById('app-sections');\n    const searchInput = document.getElementById('desktop-search-input');\n    const mobileSearchInput = document.getElementById('mobile-search-input');\n\n    let categories = new Map();\n\n    // Fetch app data from the provided URL\n    async function fetchAppData() {\n        try {\n            const response = await fetch('https://raw.githubusercontent.com/xplshn/dbin-metadata/refs/heads/master/misc/cmd/modMetadataAIO-ng/METADATA_AIO_amd64_linux.json');\n            const data = await response.json();\n            setApps(data.pkg || []);\n            processCategories();\n            initializeFromUrl(); // Initialize state from URL after data is fetched.\n            displayPopularApps();\n            displayApps();\n        } catch (error) {\n            console.error('Error fetching app data:', error);\n            appSections.innerHTML = '<div class=\"error\">Failed to load applications. Please try again later.</div>';\n        }\n    }\n\n    // Initialize app state from URL parameters\n    function initializeFromUrl() {\n        const url = new URL(window.location);\n        const initialSearch = url.searchParams.get('search') || '';\n        const initialApp = url.searchParams.get('app') || '';\n\n        displayApps(initialSearch);\n\n        if (initialApp) {\n            showAppDetails(initialApp, getApps());\n        }\n    }\n\n    // Process categories from apps\n    function processCategories() {\n        categories.clear();\n\n        getApps().forEach(app => {\n            if (app.category) {\n                const appCategories = app.category.split(',').map(cat => cat.trim());\n                appCategories.forEach(category => {\n                    if (category) {\n                        const count = categories.get(category) || 0;\n                        categories.set(category, count + 1);\n                    }\n                });\n            }\n        });\n    }\n\n    // Create app card HTML\n    function createAppCard(app) {\n        const isPortable = app.pkg.endsWith('.NixAppImage') || app.pkg.endsWith('.FlatImage') || app.pkg.endsWith('.AppBundle');\n        let badgeColor;\n        if (app.pkg.endsWith('.NixAppImage')) {\n            badgeColor = 'badge-warning'; // Bronze\n        } else if (app.pkg.endsWith('.FlatImage')) {\n            badgeColor = 'badge-success'; // Yellow\n        } else if (app.pkg.endsWith('.AppBundle')) {\n            badgeColor = 'badge-info'; // Green\n        }\n\n        return `\n            <div class=\"card cursor-pointer card-normal card-side bg-base-100 shadow-xl\" data-name=\"${app.pkg_name || app.pkg_id}\">\n                <figure class=\"w-24 h-24\">\n                    <img\n                        src=\"${app.icon}\"\n                        alt=\"${app.pkg_name || app.pkg_id}\"\n                        class=\"w-full h-full object-contain rounded-md\"\n                        loading=\"lazy\"\n                        onerror=\"this.style.display='none';\"\n                    >\n                </figure>\n                <div class=\"card-body\">\n                    <h2 class=\"card-title\">\n                        ${app.pkg_name || app.pkg_id}\n                        ${isPortable ? `<span class=\"badge ${badgeColor}\">Portable</span>` : ''}\n                    </h2>\n                    <p>${app.description || 'No description available.'}</p>\n                </div>\n            </div>\n        `;\n    }\n\n    // Display the apps in the sections\n    function displayApps(searchTerm = '') {\n        let filteredApps = getApps();\n\n        if (searchTerm) {\n            const term = searchTerm.toLowerCase();\n            filteredApps = filteredApps.filter(app =>\n                (app.pkg_name && app.pkg_name.toLowerCase().includes(term)) ||\n                (app.description && app.description.toLowerCase().includes(term)) ||\n                (app.category && app.category.toLowerCase().includes(term))\n            );\n        }\n\n        const displayedApps = new Set();\n        let appSectionsHTML = '';\n\n        categories.forEach((count, category) => {\n            // Filter apps for this category\n            const categoryApps = filteredApps.filter(app => {\n                if (!app.category) return false;\n                const appCategories = app.category.split(',').map(cat => cat.trim());\n                return appCategories.includes(category) && !displayedApps.has(app.pkg_name || app.pkg_id);\n            });\n\n            // Skip if there are no apps in this category\n            if (categoryApps.length === 0) {\n                return;\n            }\n\n            // Collect the first six apps and mark them as displayed\n            const firstSixApps = categoryApps.slice(0, 6);\n            firstSixApps.forEach(app => displayedApps.add(app.pkg_name || app.pkg_id));\n\n            // Generate HTML for app cards\n            const appCards = firstSixApps.map(app => createAppCard(app)).join('');\n\n            // Generate the section HTML\n            appSectionsHTML += `\n                <div class=\"category-section my-8\">\n                    <h2 class=\"category-title text-xl font-semibold mb-4\">${category}</h2>\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                        ${appCards}\n                    </div>\n                    ${categoryApps.length > 6 ? `<button class=\"see-more-btn btn btn-outline shadow-xl btn-xs sm:btn-sm md:btn-md lg:btn-lg\" data-category=\"${category}\">See more ${category}</button>` : ''}\n                </div>\n            `;\n        });\n\n        // Update the inner HTML of the app sections\n        appSections.innerHTML = appSectionsHTML;\n\n        // Add event listeners to app cards\n        appSections.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('click', (e) => {\n                const appName = e.currentTarget.dataset.name;\n                showAppDetails(appName, getApps());\n            });\n        });\n\n        // Add event listeners to \"See more\" buttons\n        appSections.querySelectorAll('.see-more-btn').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const category = e.target.dataset.category;\n                showAllAppsInCategory(category);\n            });\n        });\n\n        // Lazy load images\n        const lazyImages = [].slice.call(document.querySelectorAll('img.lazyload'));\n        if ('IntersectionObserver' in window) {\n            let lazyImageObserver = new IntersectionObserver(function (entries, observer) {\n                entries.forEach(function (entry) {\n                    if (entry.isIntersecting) {\n                        let lazyImage = entry.target;\n                        lazyImage.src = lazyImage.dataset.src;\n                        lazyImage.classList.remove('lazyload');\n                        lazyImageObserver.unobserve(lazyImage);\n                    }\n                });\n            });\n\n            lazyImages.forEach(function (lazyImage) {\n                lazyImageObserver.observe(lazyImage);\n            });\n        } else {\n            // Fallback for older browsers\n            lazyImages.forEach(function (lazyImage) {\n                lazyImage.src = lazyImage.dataset.src;\n                lazyImage.classList.remove('lazyload');\n            });\n        }\n    }\n\n    // Show all apps in a specific category\n    function showAllAppsInCategory(category) {\n        const categoryApps = getApps().filter(app => {\n            if (!app.category) return false;\n            const appCategories = app.category.split(',').map(cat => cat.trim());\n            return appCategories.includes(category);\n        });\n\n        const appCards = categoryApps.map(app => createAppCard(app)).join('');\n\n        appSections.innerHTML = `\n            <div class=\"category-section my-8\">\n                <h2 class=\"category-title text-xl font-semibold mb-4\">${category}</h2>\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    ${appCards}\n                </div>\n                <button class=\"see-more-btn btn btn-outline shadow-xl btn-xs sm:btn-sm md:btn-md lg:btn-lg\" onclick=\"window.history.back()\">Close</button>\n            </div>\n        `;\n\n        // Add event listeners to app cards\n        appSections.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('click', (e) => {\n                const appName = e.currentTarget.dataset.name;\n                showAppDetails(appName, getApps());\n            });\n        });\n    }\n\n    // Event Listeners\n    searchInput.addEventListener('input', (e) => {\n        const searchTerm = e.target.value;\n        displayApps(searchTerm);\n\n        // Update URL with search term\n        const url = new URL(window.location);\n        url.searchParams.set('search', searchTerm);\n        history.pushState({ search: searchTerm }, '', url);\n    });\n\n\n    mobileSearchInput.addEventListener('input', (e) => {\n        const searchTerm = e.target.value;\n        displayApps(searchTerm);\n\n        // Update URL with search term\n        const url = new URL(window.location);\n        url.searchParams.set('search', searchTerm);\n        history.pushState({ search: searchTerm }, '', url);\n    });\n\n    // Initial load\n    fetchAppData();\n\n    // Handle popstate event to sync URL with app state\n    window.addEventListener('popstate', (e) => {\n        const url = new URL(window.location);\n        const search = url.searchParams.get('search') || '';\n        const app = url.searchParams.get('app') || '';\n\n        displayApps(search);\n\n        if (app) {\n            showAppDetails(app, getApps());\n        } else {\n            closeDetails();\n        }\n    });\n\n    function closeDetails() {\n        const appDetails = document.querySelector('.app-details');\n        if (appDetails) {\n            appDetails.classList.add('hidden');\n\n            // Update URL to remove app details\n            const url = new URL(window.location);\n            url.searchParams.delete('app');\n            history.pushState({}, '', url);\n        }\n    }\n\n    // Function to display popular apps in the carousel\n    function displayPopularApps() {\n        const popularAppsCarousel = document.getElementById('popular-apps-carousel');\n        if (!popularAppsCarousel) return;\n\n        const popularApps = getApps()\n            .sort((a, b) => b.popularity_rank - a.popularity_rank)\n            .slice(0, 10);\n\n        let validApps = [];\n        let promises = popularApps.map((app, index) =>\n            createCarouselHtml(app, index, popularApps).then(html => {\n                if (html) {\n                    validApps.push({ app, html });\n                }\n            })\n        );\n\n        Promise.all(promises).then(() => {\n            const carouselHTML = validApps.map(({ html }) => html).join('');\n\n            popularAppsCarousel.innerHTML = `\n            <div class=\"carousel w-full\">\n                ${carouselHTML}\n            </div>\n        `;\n\n            // Attach event listeners after content is loaded\n            attachCarouselEventListeners();\n        });\n    }\n\n    // Helper function to create carousel HTML\n    function createCarouselHtml(app, index, popularApps) {\n        if (!Array.isArray(app.screenshots) || app.screenshots.length === 0) {\n            return Promise.resolve(`<div class=\"skeleton\"></div>`);\n        }\n\n        let loadingPromises = app.screenshots.map((src) =>\n            new Promise((resolve) => {\n                let img = new Image();\n                img.onload = () => resolve({ src, valid: true });\n                img.onerror = () => resolve({ src, valid: false });\n                img.src = src;\n            })\n        );\n\n        return Promise.all(loadingPromises).then(results => {\n            const validScreenshots = results.filter(result => result.valid);\n\n            if (validScreenshots.length === 0) {\n                return `<div class=\"skeleton\"></div>`;\n            }\n\n            const firstValidScreenshot = validScreenshots[0].src;\n            const slideId = `slide${index + 1}`;\n            const prevSlide = index === 0 ? popularApps.length : index;\n            const nextSlide = index === popularApps.length - 1 ? 1 : index + 2;\n\n            return `\n            <div id=\"${slideId}\" class=\"carousel-item relative w-full\">\n                <div class=\"flex flex-col sm:flex-row w-full gap-4 p-4\">\n                    <div class=\"sm:w-1/3 flex flex-col justify-center space-y-4\">\n                        <div class=\"flex items-center space-x-4\">\n                            <img src=\"${app.icon}\" \n                                 alt=\"${app.pkg_name || app.pkg_id}\" \n                                 class=\"w-16 h-16 object-contain\">\n                            <h3 class=\"text-lg sm:text-xl font-semibold\">${app.pkg_name || app.pkg_id}</h3>\n                        </div>\n                        <p class=\"text-sm sm:text-base\">${app.description || 'No description available.'}</p>\n                    </div>\n                    <div class=\"sm:w-2/3 relative\">\n                        <div class=\"w-full h-48 sm:h-64 md:h-80 lg:h-96 overflow-hidden rounded-lg\">\n                            <img src=\"${firstValidScreenshot}\" \n                                 alt=\"Screenshot\" \n                                 class=\"w-full h-full object-contain bg-base-200\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n                    <button class=\"btn btn-circle carousel-prev\" data-target=\"slide${prevSlide}\">\u276E</button>\n                    <button class=\"btn btn-circle carousel-next\" data-target=\"slide${nextSlide}\">\u276F</button>\n                </div>\n            </div>\n        `;\n        });\n    }\n\n    // New function to handle carousel navigation\n    function attachCarouselEventListeners() {\n        const carousel = document.querySelector('.carousel');\n        if (!carousel) return;\n\n        carousel.querySelectorAll('.carousel-prev, .carousel-next').forEach(button => {\n            button.addEventListener('click', (e) => {\n                e.preventDefault();\n                const targetSlide = document.getElementById(button.dataset.target);\n                if (targetSlide) {\n                    targetSlide.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start'\n                    });\n                }\n            });\n        });\n    }\n\n});\n"],
  "mappings": "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",
  "names": ["apps", "setApps", "newApps", "getApps", "appSections", "searchInput", "mobileSearchInput", "categories", "fetchAppData", "data", "processCategories", "initializeFromUrl", "displayPopularApps", "displayApps", "error", "url", "initialSearch", "initialApp", "app", "cat", "category", "count", "createAppCard", "isPortable", "badgeColor", "searchTerm", "filteredApps", "term", "displayedApps", "appSectionsHTML", "categoryApps", "firstSixApps", "appCards", "card", "e", "appName", "button", "showAllAppsInCategory", "lazyImages", "lazyImageObserver", "entries", "observer", "entry", "lazyImage", "search", "closeDetails", "appDetails", "popularAppsCarousel", "popularApps", "a", "b", "validApps", "promises", "index", "createCarouselHtml", "html", "carouselHTML", "attachCarouselEventListeners", "loadingPromises", "src", "resolve", "img", "results", "validScreenshots", "result", "firstValidScreenshot", "slideId", "prevSlide", "nextSlide", "carousel", "targetSlide"]
}
