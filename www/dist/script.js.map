{
  "version": 3,
  "sources": ["../shared.js", "../script.js"],
  "sourcesContent": ["// shared.js\nexport let apps = [];\n\n// Function to update the apps array\nexport function setApps(newApps) {\n    apps = newApps;\n}\n", "// script.js\nimport { setApps, apps } from './shared.js';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const appSections = document.getElementById('app-sections');\n    const searchInput = document.querySelector('.search-input');\n\n    let categories = new Map();\n\n    // Fetch app data from the provided URL\n    async function fetchAppData() {\n        try {\n            const response = await fetch('https://raw.githubusercontent.com/xplshn/dbin-metadata/refs/heads/master/misc/cmd/modMetadataAIO-ng/METADATA_AIO_amd64_linux.json');\n            const data = await response.json();\n            setApps(data.pkg || []);\n            processCategories();\n            initializeFromUrl(); // Initialize state from URL after data is fetched.\n            displayApps();\n        } catch (error) {\n            console.error('Error fetching app data:', error);\n            appSections.innerHTML = '<div class=\"error\">Failed to load applications. Please try again later.</div>';\n        }\n    }\n\n    // Initialize app state from URL parameters\n    function initializeFromUrl() {\n        const url = new URL(window.location);\n        const initialSearch = url.searchParams.get('search') || '';\n        const initialApp = url.searchParams.get('app') || '';\n\n        displayApps(initialSearch);\n\n        if (initialApp) {\n            showAppDetails(initialApp, apps);\n        }\n    }\n\n    // Process categories from apps\n    function processCategories() {\n        categories.clear();\n\n        apps.forEach(app => {\n            if (app.category) {\n                const appCategories = app.category.split(',').map(cat => cat.trim());\n                appCategories.forEach(category => {\n                    if (category) {\n                        const count = categories.get(category) || 0;\n                        categories.set(category, count + 1);\n                    }\n                });\n            }\n        });\n    }\n\n    // Create app card HTML\n    function createAppCard(app) {\n        return `\n            <div class=\"card card-normal card-side bg-base-100 shadow-xl\" data-name=\"${app.pkg_name || app.pkg_id}\">\n                <figure class=\"w-24 h-24\">\n                    <img\n                        src=\"${app.icon}\"\n                        alt=\"${app.pkg_name || app.pkg_id}\"\n                        class=\"w-full h-full object-contain rounded-md\"\n                        loading=\"lazy\"\n                        onerror=\"this.style.display='none';\"\n                    >\n                </figure>\n                <div class=\"card-body\">\n                    <h2 class=\"card-title\">${app.pkg_name || app.pkg_id}</h2>\n                    <p>${app.description || 'No description available.'}</p>\n                </div>\n            </div>\n        `;\n    }\n\n    // Display the apps in the sections\n    function displayApps(searchTerm = '') {\n        let filteredApps = apps;\n\n        if (searchTerm) {\n            const term = searchTerm.toLowerCase();\n            filteredApps = filteredApps.filter(app =>\n                (app.pkg_name && app.pkg_name.toLowerCase().includes(term)) ||\n                (app.description && app.description.toLowerCase().includes(term)) ||\n                (app.category && app.category.toLowerCase().includes(term))\n            );\n        }\n\n        const displayedApps = new Set();\n        let appSectionsHTML = '';\n\n        categories.forEach((count, category) => {\n            // Filter apps for this category\n            const categoryApps = filteredApps.filter(app => {\n                if (!app.category) return false;\n                const appCategories = app.category.split(',').map(cat => cat.trim());\n                return appCategories.includes(category) && !displayedApps.has(app.pkg_name || app.pkg_id);\n            });\n\n            // Skip if there are no apps in this category\n            if (categoryApps.length === 0) {\n                return;\n            }\n\n            // Collect the first six apps and mark them as displayed\n            const firstSixApps = categoryApps.slice(0, 6);\n            firstSixApps.forEach(app => displayedApps.add(app.pkg_name || app.pkg_id));\n\n            // Generate HTML for app cards\n            const appCards = firstSixApps.map(app => createAppCard(app)).join('');\n\n            // Generate the section HTML\n            appSectionsHTML += `\n                <div class=\"category-section mb-8\">\n                    <h2 class=\"category-title text-xl font-semibold mb-4\">${category}</h2>\n                    <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                        ${appCards}\n                    </div>\n                    ${categoryApps.length > 6 ? `<button class=\"see-more-btn btn btn-outline shadow-xl btn-xs sm:btn-sm md:btn-md lg:btn-lg\" data-category=\"${category}\">See more ${category}</button>` : ''}\n                </div>\n            `;\n        });\n\n        // Update the inner HTML of the app sections\n        appSections.innerHTML = appSectionsHTML;\n\n        // Add event listeners to app cards\n        appSections.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('click', (e) => {\n                const appName = e.currentTarget.dataset.name;\n                showAppDetails(appName, apps);\n            });\n        });\n\n        // Add event listeners to \"See more\" buttons\n        appSections.querySelectorAll('.see-more-btn').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const category = e.target.dataset.category;\n                showAllAppsInCategory(category);\n            });\n        });\n\n        // Lazy load images\n        const lazyImages = [].slice.call(document.querySelectorAll('img.lazyload'));\n        if ('IntersectionObserver' in window) {\n            let lazyImageObserver = new IntersectionObserver(function(entries, observer) {\n                entries.forEach(function(entry) {\n                    if (entry.isIntersecting) {\n                        let lazyImage = entry.target;\n                        lazyImage.src = lazyImage.dataset.src;\n                        lazyImage.classList.remove('lazyload');\n                        lazyImageObserver.unobserve(lazyImage);\n                    }\n                });\n            });\n\n            lazyImages.forEach(function(lazyImage) {\n                lazyImageObserver.observe(lazyImage);\n            });\n        } else {\n            // Fallback for older browsers\n            lazyImages.forEach(function(lazyImage) {\n                lazyImage.src = lazyImage.dataset.src;\n                lazyImage.classList.remove('lazyload');\n            });\n        }\n    }\n\n    // Show all apps in a specific category\n    function showAllAppsInCategory(category) {\n        const categoryApps = apps.filter(app => {\n            if (!app.category) return false;\n            const appCategories = app.category.split(',').map(cat => cat.trim());\n            return appCategories.includes(category);\n        });\n\n        const appCards = categoryApps.map(app => createAppCard(app)).join('');\n\n        appSections.innerHTML = `\n            <div class=\"category-section mb-8\">\n                <h2 class=\"category-title text-xl font-semibold mb-4\">${category}</h2>\n                <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                    ${appCards}\n                </div>\n                <button class=\"see-more-btn btn btn-outline shadow-xl btn-xs sm:btn-sm md:btn-md lg:btn-lg\" onclick=\"window.history.back()\">Close</button>\n            </div>\n        `;\n\n        // Add event listeners to app cards\n        appSections.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('click', (e) => {\n                const appName = e.currentTarget.dataset.name;\n                showAppDetails(appName, apps);\n            });\n        });\n    }\n\n    // Event Listeners\n    searchInput.addEventListener('input', (e) => {\n        const searchTerm = e.target.value;\n        displayApps(searchTerm);\n\n        // Update URL with search term\n        const url = new URL(window.location);\n        url.searchParams.set('search', searchTerm);\n        history.pushState({ search: searchTerm }, '', url);\n    });\n\n    // Initial load\n    fetchAppData();\n\n    // Handle popstate event to sync URL with app state\n    window.addEventListener('popstate', (e) => {\n        const url = new URL(window.location);\n        const search = url.searchParams.get('search') || '';\n        const app = url.searchParams.get('app') || '';\n\n        displayApps(search);\n\n        if (app) {\n            showAppDetails(app, apps);\n        } else {\n            closeDetails();\n        }\n    });\n\n    function closeDetails() {\n        const appDetails = document.querySelector('.app-details');\n        if (appDetails) {\n            appDetails.classList.add('hidden');\n\n            // Update URL to remove app details\n            const url = new URL(window.location);\n            url.searchParams.delete('app');\n            history.pushState({}, '', url);\n        }\n    }\n});\n"],
  "mappings": "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",
  "names": ["apps", "setApps", "newApps", "appSections", "searchInput", "categories", "fetchAppData", "data", "setApps", "processCategories", "initializeFromUrl", "displayApps", "error", "url", "initialSearch", "initialApp", "apps", "app", "cat", "category", "count", "createAppCard", "searchTerm", "filteredApps", "term", "displayedApps", "appSectionsHTML", "categoryApps", "firstSixApps", "appCards", "card", "e", "appName", "button", "showAllAppsInCategory", "lazyImages", "lazyImageObserver", "entries", "observer", "entry", "lazyImage", "search", "closeDetails", "appDetails"]
}
